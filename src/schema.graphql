type Query {
  hello: String
  user(id: ID!): UserReturn!
  Users(first: Int = 1, offset: Int = 0): Users!
}

type Mutation {
  createUser(data: UserInput!): User!
  login(email: String!, password: String!, rememberMe: Boolean = false): LoginInfo!
}

input UserInput {
  name: String!
  email: String!
  password: String!
  birthDate: String
}

type UserReturn {
  user: User!
  address: [Address]!
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  birthDate: String
}

type Users {
  total: Int!
  pageInfo: PageInfo!
  users: [UserReturn]!
}

type Address {
  id: ID!
  cep: String!
  street: String!
  streetNumber: Int!
  complement: String
  neighbourhood: String!
  city: String!
  state: String!
}

type LoginInfo {
  user: User!
  token: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}
